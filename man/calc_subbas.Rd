% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calc_subbas.R
\name{calc_subbas}
\alias{calc_subbas}
\title{Calculation of hydrological subbasins using GRASS GIS}
\usage{
calc_subbas(
  dem = NULL,
  drain_points = NULL,
  river = NULL,
  flowaccum = NULL,
  drainage_dir = NULL,
  disk_swap = FALSE,
  basin_out = NULL,
  stream = NULL,
  points_processed = NULL,
  outlet = NULL,
  thresh_stream = NULL,
  thresh_sub = NULL,
  snap_dist = 300,
  rm_spurious = 0.01,
  keep_temp = FALSE,
  overwrite = FALSE,
  silent = FALSE
)
}
\arguments{
\item{dem}{Digital Elevation Model in GRASS location used for delineation of
subbasins. Should be larger than the expected catchment, otherwise artefacts
close to boundaries may occur.}

\item{drain_points}{\code{SpatialPoints} object containing drainage points (i.e. subbasin outlets) in
units of and compliant with the projection of your respective GRASS location.
Can, e.g., be imported from GRASS with
\code{drain_points = read_VECT(vname = "subbas_outlets", layer=1)} \cr
At least the overall basin drainage point has to be given. If \code{drain_points} contains a column
\code{subbas_id} in the attribute table, its values will be used for numbering the subbasins.\cr
IDs of additionally delineated subbasins (if \code{thresh_sub != NULL}) will be appended after the highest ID.}

\item{river}{(optional) River vector map in GRASS location if available - use only if this vector map is strictly consistent
with the DEM in use. If set to \code{NULL}
(default value), the river network will be calculated by GRASS function \emph{r.watershed}.}

\item{flowaccum}{(optional) Existing raster map of flow accumulation in GRASS location (saves computation time). Must correspond to a map generated by the GRASS function \code{r.watershed}.
If \code{drainage_dir} or \code{flowaccum} is set to \code{NULL} (default value), both will be calculated with \emph{r.watershed}.}

\item{drainage_dir}{(optional) Existing raster map of drainage direction in GRASS location. Must correspond to map generated by the GRASS function \code{r.watershed}.
If \code{drainage_dir} or \code{flowaccum} is set to \code{NULL} (default value), both will be calculated with \emph{r.watershed}.}

\item{disk_swap}{(optional) Only needed if memory requirements exceed available RAM (large DEMs): If set to \code{TRUE}, \code{r.watershed} uses the "-m"-flag (slow)}

\item{basin_out}{Output: Name of subbasins raster map exported into GRASS location.}

\item{stream}{Output: Prefix of calculated stream segments vector (<stream>_vect) and
raster (<stream>_rast) maps exported into GRASS location. Only generated if
\code{river} is not set. Default: \code{NULL}.}

\item{points_processed}{Output: Prefix of intermediate point vector files exported to GRASS location, if \code{keeptemp = TRUE}
For details, see section "Value" below.}

\item{outlet}{Integer (row number) defining the catchment outlet in \code{drain_points}.
If there are \code{drain_points} outside the watershed delineated for the
outlet point these will be omitted. If \code{NULL} (default) and \code{drain_points}
contains only one point this will be assumed as catchment outlet.}

\item{thresh_stream}{Integer defining threshold for stream calculation. Raster
cells in accumulation map with values greater than thresh_stream are
considered as streams. Needs to be set only if \code{river} is not set.
Default: \code{NULL}.}

\item{thresh_sub}{Integer defining threshold for subbasin calculation. Parameter for
GRASS function \emph{r.watershed} defining the minimum size of an exterior
watershed basin in number of grid cells. If \code{NULL} (default) only the
given drainage points are used for subbasin delineation.}

\item{snap_dist}{maximum distance (in map units) to use when the points in \code{drain_points} are corrected to the nearest stream segment ("snapping").
Non-snappable drainage points will be excluded with a warning. Default: 300}

\item{rm_spurious}{\code{numeric}. If greater zero, spurious subbasins will
be removed, i.e. those subbasins being smaller than \code{rm_spurious} times \code{thresh_sub}.
Spurious subbasins are 'interior' watersheds created by GRASS function
\emph{r.watershed} around stream segments below multiple tributaries. If they
are very small they induce unnecessary computational burden when used within a
hydrological model. If removed, these areas will be related to the next upstream
subbasins, respectively. If \code{thresh_sub = NULL} (default) \code{rm_spurious}
will be automatically set to \code{0}. Default: 0.01.}

\item{keep_temp}{\code{logical}. Set to \code{TRUE} if temporary files shall be kept
in the GRASS location, e.g. for debugging or further analyses. Default: \code{FALSE}.}

\item{overwrite}{\code{logical}. Shall existing GRASS layers of previous calls of this function be
overwritten? If \code{FALSE} the function returns an error if a layer already exists.
Default: \code{FALSE}.}

\item{silent}{\code{logical}. Shall the function be silent (also suppressing warnings
of internally used GRASS functions)? Default: \code{FALSE}.}
}
\value{
Function returns nothing. Various output is generated in the GRASS-location:
 \itemize{
   \item{stream segments}{If \code{river} is not supplied,  vector (<stream>_vect) and raster (<stream>_rast) will be generated.} 
   \item{Subbasin map}{raster map \code{basin_out}} 
 }  
 If \code{keep_temp=TRUE}, the following temporary maps are preserved and can be used for tracing errors:
 \itemize{
   \item{\code{accum_t}:}{ If argument \code{flowaccum} is not supplied, contains map of flow accumulation.} 
   \item{\code{drain_t}:}{ If argument \code{drainage_dir} is not supplied, contains map of drainage direction.} 
   \item{\code{<points_processed>_t}:} { Prespecified subbasin outlet points.} 
   \item{\code{<points_processed>_snapped_t}:}{ Prespecified subbasin outlet points snapped to closest river.} 
   \item{\code{<points_processed>_calc_t}:}{ Automatically calculated subbasin outlet points (only if parameter \code{thresh_sub} is not NULL).} 
   \item{\code{<points_processed>_all_t}:}{ Combined subbasin outlet points (manual and automatically-computed ones) as raster (easier to identify double subbasin outlet points sharing one raster cell).} 
 }
}
\description{
Takes DEM from a GRASS location and a specified drainage points and/or areal threshold to calculate 
hydrological subbasins using GRASS functions.
}
\details{
The function constructs subbasins. It can use user-specified outlet points \code{param drain_points}, and/or the area-threshold \code{param thresh_sub}.
 The user-specified outlet points are snapped to the nearest river location (to fix inaccuracies) and will result in mandatory subcathcments.
 The area-threshold serves for further delineation (if necessary), and potential merging of too-small subcatchments.
}
\note{
\bold{Prepare GRASS location}  and necessary raster files in advance and start
     GRASS session in R using \code{\link[rgrass]{initGRASS}}. The GRASS location
     should not contain any maps ending on *_t as these will be considered temporary maps and removed. 
     
     You should select your DEM \bold{sufficiently large}. Otherwise, the resulting
     catchment might be truncated or boundaries influence the calculation
     of stream segments.
     
     \bold{Check the results} (subbasins and snapped points). In case points have been snapped
     to the wrong stream segment, adjust point locations manually in GRASS and re-run
     the function with the updated locations (use \code{\link[rgrass]{read_VECT}}
     to import the updated drainage points).
     
     Generated raster and vector stream \bold{maps might slightly deviate} from each other
     as the raster map is thinned (GRASS function \emph{r.thin}) prior to conversion
     to a vector map to ensure strictly linear features.
     
     If you run into \bold{memory issues}, consider argument \code{disk_swap} (see also 
     \link[GRASS homepage]{https://grass.osgeo.org/grass74/manuals/r.watershed.html#in-memory-mode-and-disk-swap-mode})
     and see discussion on \link[lumpR's github page]{https://github.com/tpilz/lumpR/issues/16}.
}
\references{
lumpR package introduction with literature study and sensitivity analysis:\cr
     Pilz, T.; Francke, T.; Bronstert, A. (2017): lumpR 2.0.0: an R package facilitating
     landscape discretisation for hillslope-based hydrological models.
     \emph{Geosci. Model Dev.}, 10, 3001-3023, doi: 10.5194/gmd-10-3001-2017
}
\author{
Tobias Pilz \email{tpilz@uni-potsdam.de}, Till Francke
}
